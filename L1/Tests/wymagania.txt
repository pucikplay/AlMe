1. Struktury danych dla instancji problemu (forma euklidesowa/macierz odległości) oraz rozwiązania.
2. Metoda wczytywania i zapisywania instancji + rozwiązań. Należy obsługiwać import z TSPLIB, instancje sprecyzowane w dokumencie.
3. Metoda generowania losowego instancji (co najmniej jedna).
4. Napisanie funkcji celu.
5. (Opcja) Dla komiwojażera euklidesowego, metoda wizualizacji instancji i rozwiązania.

==========================================================================================

Wymagania na oceny 3 i 4 (na za tydzień):
Zakończenie implementacji programów wymienionych w lab03.
Przeprowadzenie oraz zapisanie wyników eksperymentów porównujących parami co najmniej jedną wersję każdego z algorytmów z lab03. Eksperymenty w możliwie obiektywny sposób powinny porównać jakość działania algorytmów (na przykład dając algorytmom ten sam budżet obliczeniowy).
Wykorzystanie testu Wilcoxona dla par obserwacji do ustalenia na ile istotne statystycznie są różnice pomiędzy algorytmami.
Przemyśleć złożoność czasową i pamięciową zaimplementowanych algorytmów.

Wymagania na oceną 5 (na za tydzień):
Przeprowadzenie eksperymentów dla wariantów algorytmów (na przykład przetestować wpływ metody zadawania rozwiązania początkowego dla alg. 2-opt).
Zbadanie zachowania algorytmów w czasie: jak zmienia się jakość najlepszego rozwiązania w zależności od czasu (oczywiście nie dotyczy alg. najbliższego sąsiada). Jak zmienia się czas konieczny do zakończenia działania algorytmu 2-opt w zależności od jakości rozwiązania startowego (losowe vs. najbliższy sąsiad)? 

Wymagania na ocenę 5,5 (na za tydzień):
Przemyśleć jak zmienia się złożoność obliczeniowa czasowa i pamięciowa algorytmu (implementacji) w zależności od liczby wykorzystanych procesorów.
Zbadanie wpływu metody reagowania na jednakowo odległych sąsiadów w dla algorytmu najbliższego sąsiada na jakość rezultatów oraz czas działania algorytmu.
Przeprowadzenie oraz zapisanie wyników eksperymentów badających wpływ liczby wykorzystanych procesorów na czas działania algorytmów.


=========================================================================================

Części składowe sprawozdania:
	
Notatka na temat złożoności obliczeniowej (czasowej oraz pamięciowej) implementacji wszystkich Państwa algorytmów.
	
Opis eksperymentów:
	Szczegóły implementacyjne: język programowania, metoda kompilacji, kompilator, interpreter.
	Parametry sprzętu na którym przeprowadzono eksperymenty (system operacyjny, procesor – model, liczba rdzeni fizycznych, logicznych, taktowanie, ilość pamięci RAM).
	Opis instancji wykorzystanych w badaniach.
	DLA KAŻDEGO EKSPERYMENTU ODDZIELNIE:
		Cel eksperymentu oraz metodologia eksperymentu.
		Opis rezultatów z wykresami oraz tabelami; każdy wykres oraz tabela musi mieć podpis oraz referencje. Wykresy muszą mieć podpisane osie!
		Wnioski jakie można wyciągnąć na podstawie eksperymentów
	
Gotowe sprawozdanie proszę wyeksportować do formatu PDF i przesłać przez MS Teams lub email.

=========================================================================================
Lista 3




Ocena 3.0 
	Działający GA dla TSP, który jest w stanie pokonać 2-opta dla mniejszych instancji TSPLib i budżetu obliczeniowego rzędu 10 minut. 
	

Ocena 4.0 

Wymagania te same co dla oceny niżej, a dodatkowo:
	Przetestowanie co najmniej 2 metod generowania populacji początkowej. 	
	Przetestowanie co najmniej 2 metod selekcji osobników (do krzyżowania). 
	Przetestowanie co najmniej 2 operatorów krzyżowania. 
	Przetestowanie co najmniej 2 operatorów mutacji. 
	Eksperymenty przeprowadzone na co najmniej 12 instancjach. 
	Test statystyczny Friedman + Wilcoxona dla wybranych. 
	Budżet czasowy eksperymentu co najmniej 1 minuta dla każdej instancji i wariantu (łącznie 192 minuty). 
	

Ocena 5.0 

Wymagania te same co dla oceny niżej, a dodatkowo: 
	Przetestować co najmniej jedna specyficzną dla TSP metodę generowania populacji początkowej. 
	Przetestować co najmniej jedną metodę krzyżowania specyficzną dla TSP. 
	Przetestować co najmniej jedną metodę mutacji specyficzną dla TSP. 
	Przetestować co najmniej 2 metody wyboru osobników do kolejnej generacji (elitaryzm). 
	Eksperymenty na co najmniej 16 instancjach, w tym co najmniej 8 instancji symetrycznych i 8 asymetrycznych. 
	Rozważane warianty testować oddzielnie dla symetrycznego i asymetrycznego TSP oraz każdy parametr oddzielnie (czyli GA odniesienia + badanie wpływu danego parametru). 
	Zbadać kombinację najlepszych wartości parametrów z poprzedniego punktu. 
	Metodą losowego próbkowania, zbadać co najmniej 100 kombinacji parametrów (łącznie 3000 minut). Narysować histogram wyników, porównać najlepszą kombinację z tą z poprzedniego punktu. 
	Friedman 1xN, porównanie z algorytmem odniesienia + dodatkowe testy + porównanie z naiwnym zastosowaniem Wilcoxona. 


Ocena 5.5 

Wymagania te same co dla oceny niżej, a dodatkowo wybrane z (lista nie jest wyczerpująca): 

	Zbadanie wpływu zastosowania modelu wyspowego. 
	Nietrywialna implementacja równoległa. 
	Jako GA odniesienia wykorzystać algorytm z publikacji o TSP z czasopisma z Impact Factor z roku 2010 lub późniejszego. 
	Zbadanie wpływu dodatkowych mechanizmów GA, takich jak wiek lub położenie osobnika. 
	Wykrywanie i przeciwdziałanie stagnacji. 
	Porównanie z Tabu Search z poprzedniego zadania. 
	Eksperymenty na wygenerowanych losowo instancjach, których rozwiazania optymalne wyznaczono za pomocą solvera (na przykład Concorde).